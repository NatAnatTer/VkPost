package ru.netology.attachments

import ru.netology.data.Like

class VideoAttachment(
    val id: Int, // Идентификатор видеозаписи.
    val ownerId: Int, // Идентификатор владельца видеозаписи.
    val title: String, // Название видеозаписи.
    val description: String, // Текст описания видеозаписи.
    val duration: Int, // Длительность ролика в секундах.
    val image: Array<Image>, // Изображение обложки. Содержит массив объектов с полями:
    val firstFrame: Array<Image>, //Изображение первого кадра.
    val date: Int, // Дата создания видеозаписи в формате Unixtime.
    val addingDate: Int, // Дата добавления видеозаписи пользователем или группой в формате Unixtime.
    val views: Int, // Количество просмотров видеозаписи.
    val localViews: Int, // Если видео внешнее, количество просмотров ВКонтакте.
    val comments: Int, // Количество комментариев к видеозаписи.
    val player: String, //URL страницы с плеером, который можно использовать для воспроизведения ролика в браузере. Поддерживается flash и HTML5, плеер всегда масштабируется по размеру окна.
    val platform: String, // Название платформы (для видеозаписей, добавленных с внешних сайтов).
    val canAdd: Boolean, // Может ли пользователь добавить видеозапись к себе. false — не может добавить. true — может добавить.
    val isPrivate: Int, // Поле возвращается, если видеозапись приватная (например, была загружена в личное сообщение), всегда содержит 1.
    val accessKey: String, // Ключ доступа к объекту. Подробнее см. Ключ доступа к данным access_key.
    val processing: Int, // Поле возвращается в том случае, если видеоролик находится в процессе обработки, всегда содержит 1.
    val isFavorite: Boolean, // true, если объект добавлен в закладки у текущего пользователя.
    val canComment: Boolean, // Может ли пользователь комментировать видео. false — не может комментировать. true — может комментировать.
    val canEdit: Boolean, // Может ли пользователь редактировать видео. false — не может редактировать. true — может редактировать.
    val canLike: Boolean, //Может ли пользователь добавить видео в список <<Мне нравится>>.false — не может добавить. true  — может добавить.
    val canRepost: Boolean, // Может ли пользователь сделать репост видео. false — не может сделать репост. true  — может сделать репост.
    val canSubscribe: Boolean, // Может ли пользователь подписаться на автора видео. false — не может подписаться. true — может подписаться.
    val canAddToFaves: Boolean, // Может ли пользователь добавить видео в избранное. false — не может добавить. true — может добавить.
    val canAttachLink: Boolean, // Может ли пользователь прикрепить кнопку действия к видео. false — не может прикрепить. true — может прикрепить.
    val width: Int, // Ширина видео.
    val height: Int, // Высота видео.
    val userId: Int, // Идентификатор пользователя, загрузившего видео, если оно было загружено в группу одним из участников.
    val converting: Boolean, // Конвертируется ли видео. false  — не конвертируется.true — конвертируется.
    val added: Boolean, //Добавлено ли видео в альбомы пользователя. false — не добавлено. true — добавлено.
    val isSubscribed: Int, // Подписан ли пользователь на автора видео. false — не подписан. true — подписан.
    val repeat: Int, // Поле возвращается в том случае, если видео зациклено, всегда содержит 1
    val type: String, // Тип видеозаписи. Может принимать значения: video, music_video, movie.
    val balance: Int, // Баланс донатов в прямой трансляции.
    val liveStatus: String, // Статус прямой трансляции. Может принимать значения: waiting, started, finished, failed, upcoming.
    val live: Int, // Поле возвращается в том случае, если видеозапись является прямой трансляцией, всегда содержит 1. Обратите внимание, в этом случае в поле duration содержится значение 0.
    val upcoming: Int, // Поле свидетельствует о том, что трансляция скоро начнётся. Для live =1.
    val spectators: Int, // Количество зрителей прямой трансляции.
    val likes: Like, // Содержит объект отметки «Мне нравится».
    val reposts: RepostVideo, // Содержит объект репоста.

) : Attachments {
    override val typeOfAttachments: String
        get() = "Video"

    class Image {
        val height: Int = 0 //высота изображения.
        val url: String = "" // ссылка на изображение.
        val width: Int = 0//цирина изображение.
        val withPadding: Int = 1 // поле возвращается, если изображение с отбивкой, всегда содержит 1.
    }

    class RepostVideo {
        val count: Int = 0 // счетчик общего количества репостов. Содержит сумму репостов на стену и в личные сообщения.
        val wallCount: Int = 0 // счетчик репостов на стену.
        val mailCount: Int = 0 // счетчик репостов в личные сообщения.
        val userReposted: Int = 0 //информация о том, сделал ли текущий пользователь репост этого видео.
    }
}
